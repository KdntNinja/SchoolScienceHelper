package pages

import (
	"github.com/KdntNinja/ScratchClone/ui/components/button"
	"github.com/KdntNinja/ScratchClone/ui/components/input"
	"github.com/KdntNinja/ScratchClone/ui/components/card"
	"github.com/KdntNinja/ScratchClone/ui/components/tabs"
	"github.com/KdntNinja/ScratchClone/ui/components/label"
	"github.com/KdntNinja/ScratchClone/ui/layouts"
)

templ Auth() {
	@layouts.BaseLayout() {
		<main class="flex items-center justify-center min-h-[calc(100vh-72px)] bg-gradient-to-br from-background to-muted px-4 py-12">
			@card.Card(card.Props{Class: "bg-card/90 dark:bg-card/80 rounded-3xl shadow-2xl w-full max-w-md p-12 border border-border flex flex-col gap-8"}) {
				<h2 class="text-4xl font-extrabold text-center mb-2 text-primary tracking-tight drop-shadow">Welcome</h2>
				@tabs.Tabs(tabs.Props{
					Tabs: []tabs.Tab{
						{ID: "login", Label: "Login"},
						{ID: "signup", Label: "Sign Up"},
					},
					DefaultTab: "login",
					Class: "mb-8",
					Content: map[string]templ.Component{
						"login": LoginForm(),
						"signup": SignupForm(),
					},
				})
			}
		</main>
	}
}

templ LoginForm() {
	<form id="login-form-element" class="flex flex-col gap-6">
		<div id="login-error" class="hidden text-destructive text-sm mb-1"></div>
		@label.Label(label.Props{For: "email", Text: "Email address", Class: "mb-1 font-semibold"})
		@input.Input(input.Props{
			Name: "email",
			Type: "email",
			Placeholder: "Email address",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full",
		})
		@label.Label(label.Props{For: "password", Text: "Password", Class: "mb-1 font-semibold mt-2"})
		@input.Input(input.Props{
			Name: "password",
			Type: "password",
			Placeholder: "Password",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full"
		})
		<div class="w-full mt-2">
			@button.Button(button.Props{Variant: "default", Type: "submit", Class: "w-full py-2 text-base rounded-xl font-semibold shadow-md hover:shadow-lg transition-all"}) {
				Log in
			}
		</div>
		<div class="text-center text-muted-foreground text-xs mt-5">
			By continuing, you agree to our <a href="/terms" class="underline hover:text-primary">Terms & Conditions</a> and <a href="/privacy" class="underline hover:text-primary">Privacy Policy</a>.
		</div>
	</form>
}

templ SignupForm() {
	<form id="signup-form-element" class="flex flex-col gap-6">
		<div id="signup-error" class="hidden text-destructive text-sm mb-1"></div>
		@label.Label(label.Props{For: "username", Text: "Username", Class: "mb-1 font-semibold"})
		@input.Input(input.Props{
			Name: "username",
			Type: "text",
			Placeholder: "Username",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full"
		})
		@label.Label(label.Props{For: "email", Text: "Email address", Class: "mb-1 font-semibold mt-2"})
		@input.Input(input.Props{
			Name: "email",
			Type: "email",
			Placeholder: "Email address",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full"
		})
		@label.Label(label.Props{For: "password", Text: "Password", Class: "mb-1 font-semibold mt-2"})
		@input.Input(input.Props{
			Name: "password",
			Type: "password",
			Placeholder: "Password",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full"
		})
		@label.Label(label.Props{For: "confirmPassword", Text: "Confirm password", Class: "mb-1 font-semibold mt-2"})
		@input.Input(input.Props{
			Name: "confirmPassword",
			Type: "password",
			Placeholder: "Confirm password",
			Required: true,
			Class: "rounded-xl px-5 py-3 bg-background/80 text-foreground placeholder:text-muted-foreground focus:ring-2 focus:ring-primary/70 focus:bg-background/100 transition-all shadow-sm border border-input w-full"
		})
		<div class="w-full mt-2">
			@button.Button(button.Props{Variant: "primary", Type: "submit", Class: "w-full py-2 text-base rounded-xl font-semibold shadow-md hover:shadow-lg transition-all"}) {
				Sign up
			}
		</div>
		<div class="text-center text-muted-foreground text-xs mt-5">
			By continuing, you agree to our <a href="/terms" class="underline hover:text-primary">Terms & Conditions</a> and <a href="/privacy" class="underline hover:text-primary">Privacy Policy</a>.
		</div>
	</form>
}
