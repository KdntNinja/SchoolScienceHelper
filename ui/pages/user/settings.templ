package pages

import (
	"KdnSite/ui/components/button"
	"KdnSite/ui/components/card"
	"KdnSite/ui/components/input"
	"KdnSite/ui/components/tabs"
	"KdnSite/ui/components/form"
	"KdnSite/ui/layouts"
)

templ Settings() {
	@layouts.BaseLayout() {
		@card.Card(card.Props{
			Class: "bg-card rounded-2xl shadow-2xl w-full max-w-2xl p-10 border border-border space-y-10 mt-10 mx-auto",
		}) {
			@card.Header(card.HeaderProps{}) {
				@card.Title(card.TitleProps{
					Class: "text-3xl font-black text-center text-primary tracking-tight",
				}) {
					Account Settings
				}
			}
			@card.Content(card.ContentProps{}) {
				@tabs.Tabs(tabs.Props{ID: "settings-tabs", Class: "w-full"}) {
					@tabs.List() {
						@tabs.Trigger(tabs.TriggerProps{Value: "profile", TabsID: "settings-tabs", IsActive: true}) { Profile }
						@tabs.Trigger(tabs.TriggerProps{Value: "security", TabsID: "settings-tabs"}) { Security }
						@tabs.Trigger(tabs.TriggerProps{Value: "delete", TabsID: "settings-tabs"}) { Delete Account }
					}
					@tabs.Content(tabs.ContentProps{Value: "profile", TabsID: "settings-tabs", IsActive: true}) {
						@form.Item() {
							@card.Card(card.Props{Class: "mb-8 p-6 bg-muted/30 border border-border"}) {
								@card.Title(card.TitleProps{Class: "text-xl font-semibold text-primary mb-2"}) { Profile }
								@form.Item() {
									@form.Label(form.LabelProps{For: "username-input", Class: "mb-2 font-semibold"}) { Username }
									@input.Input(input.Props{
										ID:          "username-input",
										Name:        "username",
										Type:        input.TypeText,
										Class:       "w-full",
										Required:    true,
										Placeholder: "Enter your username",
									})
									@form.Message(form.MessageProps{ID: "username-error-msg", Variant: form.MessageVariantError}) {}
								}
								@button.Button(button.Props{Type: "submit", Variant: button.VariantDefault, Class: "w-full mt-4"}) { Update Username }
								@button.Button(button.Props{ID: "logout-btn", Variant: button.VariantDefault, Class: "w-full mt-6 text-red-600 border-red-600 hover:bg-red-50"}) { Log Out }
							}
						}
					}
					@tabs.Content(tabs.ContentProps{Value: "security", TabsID: "settings-tabs"}) {
						@card.Card(card.Props{Class: "mb-6 p-4 bg-muted/30 rounded-xl border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-lg font-semibold mb-2"}) { Email Verification }
							@form.Message(form.MessageProps{ID: "email-verification-status", Variant: form.MessageVariantInfo}) {}
							@button.Button(button.Props{ID: "resend-verification-btn", Class: "btn btn-sm btn-primary mt-2"}) { Resend Verification Email }
						}
						@card.Card(card.Props{Class: "mb-6 p-4 bg-muted/30 rounded-xl border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-lg font-semibold mb-2"}) { Multi-Factor Authentication (MFA) }
							@button.Button(button.Props{ID: "mfa-btn", Class: "btn btn-sm btn-primary"}) { Manage MFA }
							@form.Message(form.MessageProps{ID: "mfa-info", Variant: form.MessageVariantInfo}) { MFA helps protect your account with an extra layer of security. }
						}
						@card.Card(card.Props{Class: "mb-6 p-4 bg-muted/30 rounded-xl border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-lg font-semibold mb-2"}) { Social Login }
							@button.Button(button.Props{ID: "link-social-btn", Class: "btn btn-sm btn-primary"}) { Manage Social Accounts }
							@form.Message(form.MessageProps{ID: "social-info", Variant: form.MessageVariantInfo}) { Link or unlink Google, GitHub, or other social accounts. }
						}
						@card.Card(card.Props{Class: "mb-6 p-4 bg-muted/30 rounded-xl border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-lg font-semibold mb-2"}) { Passwordless Login }
							@button.Button(button.Props{ID: "passwordless-btn", Class: "btn btn-sm btn-primary"}) { Enable Passwordless (Magic Link) }
							@form.Message(form.MessageProps{ID: "passwordless-info", Variant: form.MessageVariantInfo}) { Sign in with a magic link sent to your email. }
						}
						@card.Card(card.Props{Class: "mb-6 p-4 bg-muted/30 rounded-xl border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-lg font-semibold mb-2"}) { Active Sessions }
							@form.Message(form.MessageProps{ID: "session-list", Variant: form.MessageVariantInfo}) {}
							@button.Button(button.Props{ID: "revoke-sessions-btn", Class: "btn btn-sm btn-destructive mt-2"}) { Log out from all devices }
						}
					}
					@tabs.Content(tabs.ContentProps{Value: "delete", TabsID: "settings-tabs"}) {
						@card.Card(card.Props{Class: "p-6 bg-muted/30 border border-border"}) {
							@card.Title(card.TitleProps{Class: "text-xl font-semibold text-primary mb-2"}) { Delete Account }
							@form.Message(form.MessageProps{ID: "delete-warning", Variant: form.MessageVariantError}) { This will permanently delete your account and all data. This action cannot be undone. }
							@form.Item() {
								@button.Button(button.Props{ID: "delete-btn", Variant: button.VariantDefault, Class: "w-full text-red-600 border-red-600 hover:bg-red-50"}) { Delete Account }
							}
						}
					}
					@tabs.Script()
				}
			}
		}
	}
}
