package pages

import (
	"SchoolScienceHelper/ui/components/button"
	"SchoolScienceHelper/ui/layouts"
)

templ Auth() {
	@layouts.BaseLayout() {
		<main class="flex items-center justify-center min-h-[calc(100vh-72px)] bg-background px-4 py-12">
			<div class="bg-card dark:bg-card rounded-lg shadow-xl w-full max-w-md p-8 border border-border flex flex-col items-center" id="auth-container">
				<h2 class="text-3xl font-bold text-center mb-6 text-primary">Welcome</h2>
				<p class="mb-8 text-center text-muted-foreground">Sign in securely using our trusted authentication provider.</p>
				@button.Button(button.Props{
					ID:    "auth-external-btn",
					Class: "w-full flex items-center justify-center gap-3 rounded-lg px-4 py-3 bg-primary text-primary-foreground font-medium text-base shadow hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 transition-all min-h-[48px] min-w-[220px]",
				}) {
					<span class="font-medium">Sign in</span>
				}
				<p class="mt-6 text-xs text-muted-foreground text-center">
					By continuing, you agree to our
					<a href="/terms" class="text-primary hover:underline">Terms & Conditions</a>
					and
					<a href="/privacy" class="text-primary hover:underline">Privacy Policy</a>.
				</p>
				<div id="auth-status" class="mt-4 text-center text-sm text-muted-foreground"></div>
			</div>
		</main>
		<script>
			(function() {
				// Helper: parse hash params
				function parseHashParams(hash) {
					const params = {};
					hash.replace(/^#/, '').split('&').forEach(kv => {
						const [k, v] = kv.split('=');
						if (k) params[k] = decodeURIComponent(v || '');
					});
					return params;
				}

				// If redirected back with tokens, process them
				const hashParams = parseHashParams(window.location.hash);
				const statusDiv = document.getElementById('auth-status');
				if (hashParams.id_token) {
					// Show loading
					if (statusDiv) statusDiv.textContent = 'Signing you in...';
					// Send id_token to backend to set cookie/session
					fetch('/api/auth/callback', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ token: hashParams.id_token })
					}).then(resp => {
						if (resp.ok) {
							window.location.hash = '';
							window.location.replace('/dash');
						} else {
							if (statusDiv) statusDiv.textContent = 'Authentication failed. Please try again.';
							setTimeout(() => window.location.replace('/auth'), 2000);
						}
					}).catch(() => {
						if (statusDiv) statusDiv.textContent = 'Could not reach server. Redirecting...';
						setTimeout(() => window.location.replace('/dash'), 2000);
					});
					return;
				}

				fetch('/config')
					.then(res => res.json())
					.then(cfg => {
						window.AUTH0_DOMAIN = cfg.AUTH0_DOMAIN;
						window.AUTH0_CLIENT_ID = cfg.AUTH0_CLIENT_ID;
					});
			})();

			document.getElementById('auth-external-btn').onclick = () => {
				const domain = window.AUTH0_DOMAIN;
				const clientId = window.AUTH0_CLIENT_ID;
				const redirectUri = window.location.origin + '/auth';
				const nonce = Date.now();
				window.location.href = `https://${domain}/authorize?response_type=id_token%20token&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=openid%20profile%20email&nonce=${nonce}`;
			};
		</script>
	}
}
